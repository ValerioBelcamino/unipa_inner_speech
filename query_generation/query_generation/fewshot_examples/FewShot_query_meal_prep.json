{
    "examples": [
        {
            "question": "Ciao, sono Luca. Puoi suggerirmi una cena alternativa senza uova per domenica? Viene anche un amico allergico al lattosio",
            "parameters": "{'nome_utente': 'luca', 'ingredienti_rimossi': ['uova','lattosio'], 'ingredienti_preferiti':[], 'solo_questi_ingredienti':[], 'giorno': 'domenica', 'pasto': 'cena'}",
            "query": "[MATCH (p:Person {name: 'luca'})-[:IS_ALLERGIC_TO]->(i) RETURN i.name as USER_ALLERGIES;, MATCH (p:Person {name: 'luca'})-[:SHOULD_EAT {day: 'domenica', meal: 'cena'}]->(d:Dish) RETURN d.name AS dish, d.type AS type, d.calories AS calories, d.proteins AS proteins, d.carbs AS carbs, d.fats AS fats;, MATCH (p:Person {name: 'luca'}) MATCH (d:Dish) WHERE NOT EXISTS { MATCH (d)-[:CONTAINS]->(i:Ingredient) WHERE i.name IN ['lattosio', 'uova'] OR EXISTS { MATCH (d)-[]-()-[:CONTAINS]->(a:Allergen) WHERE a.name IN ['lattosio', 'uova']}} AND NOT EXISTS { MATCH (d)-[:CONTAINS]->(i:Ingredient) MATCH (p)-[:IS_ALLERGIC_TO]->(i)} RETURN d.name AS dish, d.type AS type, d.calories AS calories,d.proteins AS proteins, d.carbs AS carbs, d.fats AS fats ORDER BY d.type;]"
        },
        {
            "question": "Ciao, sono Giulia. Puoi suggerirmi una cena senza frutta secca per mercoledì?",
            "parameters": "{'nome_utente': 'giulia', 'ingredienti_rimossi': ['frutta secca'], 'ingredienti_preferiti':[], 'solo_questi_ingredienti':[], 'giorno': 'mercoledì', 'pasto': 'cena'}",
            "query1": "MATCH (p:Person {name: 'giulia'})-[:IS_ALLERGIC_TO]->(i) RETURN i.name as USER_ALLERGIES;",
            "query2": "MATCH (p:Person {name: 'giulia'})-[:SHOULD_EAT {day: 'mercoledì', meal: 'cena'}]->(d:Dish) RETURN d.name AS dish, d.type AS type, d.calories AS calories, d.proteins AS proteins, d.carbs AS carbs, d.fats AS fats;",
            "query3": "MATCH (p:Person {name: 'giulia'}) MATCH (d:Dish) WHERE NOT EXISTS { MATCH (d)-[:CONTAINS]->(i:Ingredient) WHERE i.name IN ['frutta secca'] OR EXISTS { MATCH (d)-[]-()-[:CONTAINS]->(a:Allergen) WHERE a.name IN ['frutta secca']}} AND NOT EXISTS { MATCH (d)-[:CONTAINS]->(i:Ingredient) MATCH (p)-[:IS_ALLERGIC_TO]->(i) } RETURN d.name AS dish, d.type AS type, d.calories AS calories, d.proteins AS proteins, d.carbs AS carbs, d.fats AS fats ORDER BY d.type;"
        },
        {
            "question": "Ciao, sono Marco. Puoi suggerirmi un pranzo con pollo e riso per giovedì?",
            "parameters": "{'nome_utente': 'marco', 'ingredienti_rimossi': [], 'ingredienti_preferiti': ['pollo', 'riso'], 'solo_questi_ingredienti': [], 'giorno': 'giovedì', 'pasto': 'pranzo'}",
            "query1": "MATCH (p:Person {name: 'marco'})-[:IS_ALLERGIC_TO]->(i) RETURN i.name as USER_ALLERGIES;",
            "query2": "MATCH (p:Person {name: 'marco'})-[:SHOULD_EAT {day: 'giovedì', meal: 'pranzo'}]->(d:Dish) RETURN d.name AS dish, d.type AS type, d.calories AS calories, d.proteins AS proteins, d.carbs AS carbs, d.fats AS fats;",
            "query3": "MATCH (d:Dish) WHERE EXISTS { MATCH (d)-[:CONTAINS]->(i:Ingredient) WHERE i.name IN ['pollo', 'riso'] } AND NOT EXISTS { MATCH (p:Person {name: 'marco'})-[:IS_ALLERGIC_TO]->(i:Ingredient) MATCH (d)-[:CONTAINS]->(i) } RETURN d.name AS dish, d.type AS type, d.calories AS calories, d.proteins AS proteins, d.carbs AS carbs, d.fats AS fats ORDER BY d.type;"
        },
        {
            "question": "Ciao, sono Francesca. Puoi suggerirmi una cena con salmone ma senza pomodoro per sabato?",
            "parameters": "{{'nome_utente': 'francesca', 'ingredienti_rimossi': ['pomodoro'], 'ingredienti_preferiti': ['salmone'], 'solo_questi_ingredienti': [], 'giorno': 'sabato', 'pasto': 'cena'}}",
            "query1": "MATCH (p:Person {name: 'francesca'})-[:IS_ALLERGIC_TO]->(i) RETURN i.name as USER_ALLERGIES;",
            "query2": "MATCH (p:Person {name: 'francesca'})-[:SHOULD_EAT {day: 'sabato', meal: 'cena'}]->(d:Dish) RETURN d.name AS dish, d.type AS type, d.calories AS calories, d.proteins AS proteins, d.carbs AS carbs, d.fats AS fats;",
            "query3": "MATCH (d:Dish) WHERE EXISTS { MATCH (d)-[:CONTAINS]->(i:Ingredient) WHERE i.name = 'salmone' } AND NOT EXISTS { MATCH (d)-[:CONTAINS]->(i:Ingredient) WHERE i.name IN ['frutta secca'] OR EXISTS { MATCH (d)-[]-()-[:CONTAINS]->(a:Allergen) WHERE a.name IN ['frutta secca']}} AND NOT EXISTS { MATCH (p:Person {name: 'francesca'})-[:IS_ALLERGIC_TO]->(i:Ingredient) MATCH (d)-[:CONTAINS]->(i) }} RETURN d.name AS dish, d.type AS type, d.calories AS calories, d.proteins AS proteins, d.carbs AS carbs, d.fats AS fats ORDER BY d.type;"
        },
        {
            "question": "Ciao, sono Alessandro. Ho solo uova e spinaci in frigo, cosa posso cucinare per colazione?",
            "parameters": "{'nome_utente': 'alessandro', 'ingredienti_rimossi': [], 'ingredienti_preferiti': [], 'solo_questi_ingredienti': ['uova', 'spinaci'], 'giorno': 'lunedi', 'pasto': 'colazione'}",
            "query1": "MATCH (p:Person {name: 'alessandro'})-[:IS_ALLERGIC_TO]->(i) RETURN i.name as USER_ALLERGIES;",
            "query2": "MATCH (p:Person {name: 'alessandro'})-[:SHOULD_EAT {day: 'lunedi', meal: 'colazione'}]->(d:Dish) RETURN d.name AS dish, d.type AS type, d.calories AS calories, d.proteins AS proteins, d.carbs AS carbs, d.fats AS fats;",
            "query3": "MATCH (p:Person {name: 'alessandro'}) MATCH (d:Dish) WHERE NOT EXISTS { MATCH (d)-[:CONTAINS]->(i:Ingredient) WHERE NOT i.name IN ['uova', 'spinaci'] } AND NOT EXISTS { MATCH (d)-[:CONTAINS]->(i:Ingredient) MATCH (p)-[:IS_ALLERGIC_TO]->(i) } RETURN d.name AS dish, d.type AS type, d.calories AS calories, d.proteins AS proteins, d.carbs AS carbs, d.fats AS fats ORDER BY d.type;"
        }
    
    ]
}
