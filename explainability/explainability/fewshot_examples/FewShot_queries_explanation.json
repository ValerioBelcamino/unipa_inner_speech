{
    "examples": [
        {
            "user_input": "Ciao, sono Giulia, posso mangiare il pollo al curry?",
            "queries": "MATCH (p:Person {name: 'giulia'}) MATCH (d:Dish {name: 'pollo_al_curry'}) OPTIONAL MATCH (d)-[:CONTAINS]->(i:Ingredient) OPTIONAL MATCH (i)-[:CONTAINS]->(a:Allergen) OPTIONAL MATCH (p)-[:IS_ALLERGIC_TO]->(ua:Allergen) WITH d, p, COLLECT(DISTINCT i.name) AS ingredients, COLLECT(DISTINCT a.name) AS dish_allergens, COLLECT(DISTINCT ua.name) AS user_allergens WITH d, ingredients, dish_allergens, user_allergens, apoc.coll.intersection(dish_allergens, user_allergens) AS risks_for_user RETURN d.name AS dish, dish_allergens, user_allergens, risks_for_user",
            "query_results": "[{'dish': 'pollo_al_curry', 'dish_allergens': ['soia'], 'user_allergens': ['soia'], 'risks_for_user': ['lattosio']}]",
            "explanation": "Ciao Giulia, il pollo al curry contiene soia, che non è adatto a te che sei allergica!"
        },
        {
            "user_input": "Ma la panna cotta contiene lattosio?",
            "queries": "MATCH (d:Dish {name: 'cappuccino'}) OPTIONAL MATCH (d)-[:CONTAINS]->(i:Ingredient) OPTIONAL MATCH (i)-[:CONTAINS]->(a:Allergen) WITH d, [name IN COLLECT(DISTINCT i.name) WHERE toLower(name) CONTAINS 'lattosio'] AS matching_ingredients, [name IN COLLECT(DISTINCT a.name) WHERE toLower(name) CONTAINS 'lattosio'] AS matching_allergens WITH d, apoc.coll.toSet(matching_ingredients + matching_allergens) AS contains RETURN d.name AS dish, contains",
            "query_results": "[{'dish': 'cappuccino', 'contains': ['lattosio']}]",
            "explanation": "Sì, la panna cotta contiene lattosio. Se sei intollerante te la sconsiglio!"
        },
        {
            "user_input": "Puoi inserirmi nel sistema? Sono Franco e ho un fabbisogno di 2500kcal. Vorrei distribuirle tra 140g di carboidrati, 130 di proteine e 70 di grassi. Inoltre sono allergico a lattosio e glutine.",
            "queries": "MATCH (r:Recipe {name: 'panna cotta'}) OPTIONAL MATCH (r)-[:HAS_ALLERGEN]->(ra:Allergen) RETURN r, COLLECT(ra.name) AS recipe_allergens, [] AS user_allergies",
            "query_results": "[{'p': {'carbs': 120, 'fats': 50, 'proteins': 100, 'name': 'jonny', 'calories': 1800}, 'a': {'name': 'noci'}}]",
            "explanation": "La panna cotta non contiene glutine. Tuttavia, se sei intollerante al lattosio, ti consiglio di evitare questo dolce. Inoltre ha circa 400kcal, 25g di proteine, 35g di carboidrati e 6g di grassi."
        },
        {
            "user_input": "Puoi inserirmi nel sistema? Sono Jonny e ho un fabbisogno di 2500kcal. Vorrei distribuirle tra 140g di carboidrati, 130 di proteine e 70 di grassi. Inoltre sono allergico a lattosio e glutine.",
            "queries": "MATCH (r:Recipe {name: 'panna cotta'}) OPTIONAL MATCH (r)-[:HAS_ALLERGEN]->(ra:Allergen) RETURN r, COLLECT(ra.name) AS recipe_allergens, [] AS user_allergies",
            "query_results": "Node(17) already exists with label `Person` and property `name` = 'jonny'",
            "explanation": "Ho provato a inserirti ma sembra che un utente sia già stato registrato con lo stesso nome, quindi l'operazione è fallita."
        }
        
    ]
}
