{
    "examples": [
        {
            "user_input": "Ciao, sono marco, posso mangiare il pollo al curry?",
            "queries": "MATCH (r:Recipe {name: 'pollo al curry'}) OPTIONAL MATCH (u:User {name: 'Luca'})-[:IS_ALLERGIC_TO]->(a:Allergen)<-[:HAS_ALLERGEN]-(r) RETURN r, collect(a) AS allergens",
            "query_results": "[[]]",
            "explanation": "Ciao Luca, il pollo al curry contiene soia, che potrebbe non essere adatto a te se sei allergico. Posso proporti delle alternative che rispettano le tue necessità?"
        },
        {
            "user_input": "Ma la panna cotta contiene glutine?",
            "queries": "MATCH (r:Recipe {name: 'panna_cotta'}) OPTIONAL MATCH (r)-[:HAS_ALLERGEN]->(ra:Allergen) RETURN r, COLLECT(ra.name) AS recipe_allergens, [] AS user_allergies",
            "query_results": "[{'dish': 'panna_cotta', 'contains': ['lattosio']}]",
            "explanation": "Sì, la panna cotta contiene lattosio. Se sei intollerante te la sconsiglio!"
        },
        {
            "user_input": "Puoi inserirmi nel sistema? Sono Franco e ho un fabbisogno di 2500kcal. Vorrei distribuirle tra 140g di carboidrati, 130 di proteine e 70 di grassi. Inoltre sono allergico a lattosio e glutine.",
            "queries": "MATCH (r:Recipe {name: 'panna cotta'}) OPTIONAL MATCH (r)-[:HAS_ALLERGEN]->(ra:Allergen) RETURN r, COLLECT(ra.name) AS recipe_allergens, [] AS user_allergies",
            "query_results": "[{'p': {'carbs': 120, 'fats': 50, 'proteins': 100, 'name': 'jonny', 'calories': 1800}, 'a': {'name': 'noci'}}]",
            "explanation": "La panna cotta non contiene glutine. Tuttavia, se sei intollerante al lattosio, ti consiglio di evitare questo dolce. Inoltre ha circa 400kcal, 25g di proteine, 35g di carboidrati e 6g di grassi."
        },
        {
            "user_input": "Puoi inserirmi nel sistema? Sono Jonny e ho un fabbisogno di 2500kcal. Vorrei distribuirle tra 140g di carboidrati, 130 di proteine e 70 di grassi. Inoltre sono allergico a lattosio e glutine.",
            "queries": "MATCH (r:Recipe {name: 'panna cotta'}) OPTIONAL MATCH (r)-[:HAS_ALLERGEN]->(ra:Allergen) RETURN r, COLLECT(ra.name) AS recipe_allergens, [] AS user_allergies",
            "query_results": "Node(17) already exists with label `Person` and property `name` = 'jonny'",
            "explanation": "Ho provato a inserirti ma sembra che un utente sia già stato registrato con lo stesso nome, quindi l'operazione è fallita."
        }
        
    ]
}
